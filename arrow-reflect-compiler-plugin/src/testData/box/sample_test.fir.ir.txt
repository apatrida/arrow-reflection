FILE fqName:foo.bar fileName:/sample_test.kt
  CLASS CLASS name:Sample modality:FINAL visibility:public [data] superTypes:[kotlin.Any]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:foo.bar.Sample
    CONSTRUCTOR visibility:public <> (foo:kotlin.Int) returnType:foo.bar.Sample [primary]
      VALUE_PARAMETER name:foo index:0 type:kotlin.Int
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:Sample modality:FINAL visibility:public [data] superTypes:[kotlin.Any]'
    PROPERTY name:foo visibility:public modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:foo type:kotlin.Int visibility:private [final]
        EXPRESSION_BODY
          GET_VAR 'foo: kotlin.Int declared in foo.bar.Sample.<init>' type=kotlin.Int origin=INITIALIZE_PROPERTY_FROM_PARAMETER
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-foo> visibility:public modality:FINAL <> ($this:foo.bar.Sample) returnType:kotlin.Int
        correspondingProperty: PROPERTY name:foo visibility:public modality:FINAL [val]
        $this: VALUE_PARAMETER name:<this> type:foo.bar.Sample
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='public final fun <get-foo> (): kotlin.Int declared in foo.bar.Sample'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:foo type:kotlin.Int visibility:private [final]' type=kotlin.Int origin=null
              receiver: GET_VAR '<this>: foo.bar.Sample declared in foo.bar.Sample.<get-foo>' type=foo.bar.Sample origin=null
    FUN name:component1 visibility:public modality:FINAL <> ($this:foo.bar.Sample) returnType:kotlin.Int [operator]
      $this: VALUE_PARAMETER name:<this> type:foo.bar.Sample
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun component1 (): kotlin.Int [operator] declared in foo.bar.Sample'
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:foo type:kotlin.Int visibility:private [final]' type=kotlin.Int origin=null
            receiver: GET_VAR '<this>: foo.bar.Sample declared in foo.bar.Sample.component1' type=foo.bar.Sample origin=null
    FUN name:copy visibility:public modality:FINAL <> ($this:foo.bar.Sample, foo:kotlin.Int) returnType:foo.bar.Sample
      $this: VALUE_PARAMETER name:<this> type:foo.bar.Sample
      VALUE_PARAMETER name:foo index:0 type:kotlin.Int
        EXPRESSION_BODY
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:foo type:kotlin.Int visibility:private [final]' type=kotlin.Int origin=null
            receiver: GET_VAR '<this>: foo.bar.Sample declared in foo.bar.Sample.copy' type=foo.bar.Sample origin=null
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun copy (foo: kotlin.Int): foo.bar.Sample declared in foo.bar.Sample'
          CONSTRUCTOR_CALL 'public constructor <init> (foo: kotlin.Int) [primary] declared in foo.bar.Sample' type=foo.bar.Sample origin=null
            foo: GET_VAR 'foo: kotlin.Int declared in foo.bar.Sample.copy' type=kotlin.Int origin=null
    FUN GENERATED_DATA_CLASS_MEMBER name:equals visibility:public modality:OPEN <> ($this:foo.bar.Sample, other:kotlin.Any?) returnType:kotlin.Boolean
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean [operator] declared in kotlin.Any
      $this: VALUE_PARAMETER GENERATED_DATA_CLASS_MEMBER name:<this> type:foo.bar.Sample
      VALUE_PARAMETER GENERATED_DATA_CLASS_MEMBER name:other index:0 type:kotlin.Any?
      BLOCK_BODY
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: CALL 'public final fun EQEQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQEQ
              arg0: GET_VAR '<this>: foo.bar.Sample declared in foo.bar.Sample.equals' type=foo.bar.Sample origin=null
              arg1: GET_VAR 'other: kotlin.Any? declared in foo.bar.Sample.equals' type=kotlin.Any? origin=null
            then: RETURN type=kotlin.Nothing from='public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in foo.bar.Sample'
              CONST Boolean type=kotlin.Boolean value=true
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: TYPE_OP type=kotlin.Boolean origin=NOT_INSTANCEOF typeOperand=foo.bar.Sample
              GET_VAR 'other: kotlin.Any? declared in foo.bar.Sample.equals' type=kotlin.Any? origin=null
            then: RETURN type=kotlin.Nothing from='public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in foo.bar.Sample'
              CONST Boolean type=kotlin.Boolean value=false
        VAR IR_TEMPORARY_VARIABLE name:tmp_0 type:foo.bar.Sample [val]
          TYPE_OP type=foo.bar.Sample origin=CAST typeOperand=foo.bar.Sample
            GET_VAR 'other: kotlin.Any? declared in foo.bar.Sample.equals' type=kotlin.Any? origin=null
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
              $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
                arg0: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:foo type:kotlin.Int visibility:private [final]' type=kotlin.Int origin=null
                  receiver: GET_VAR '<this>: foo.bar.Sample declared in foo.bar.Sample.equals' type=foo.bar.Sample origin=null
                arg1: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:foo type:kotlin.Int visibility:private [final]' type=kotlin.Int origin=null
                  receiver: GET_VAR 'val tmp_0: foo.bar.Sample [val] declared in foo.bar.Sample.equals' type=foo.bar.Sample origin=null
            then: RETURN type=kotlin.Nothing from='public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in foo.bar.Sample'
              CONST Boolean type=kotlin.Boolean value=false
        RETURN type=kotlin.Nothing from='public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in foo.bar.Sample'
          CONST Boolean type=kotlin.Boolean value=true
    FUN GENERATED_DATA_CLASS_MEMBER name:hashCode visibility:public modality:OPEN <> ($this:foo.bar.Sample) returnType:kotlin.Int
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
      $this: VALUE_PARAMETER GENERATED_DATA_CLASS_MEMBER name:<this> type:foo.bar.Sample
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public open fun hashCode (): kotlin.Int declared in foo.bar.Sample'
          CALL 'public open fun hashCode (): kotlin.Int [fake_override] declared in kotlin.Int' type=kotlin.Int origin=null
            $this: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:foo type:kotlin.Int visibility:private [final]' type=kotlin.Int origin=null
              receiver: GET_VAR '<this>: foo.bar.Sample declared in foo.bar.Sample.hashCode' type=foo.bar.Sample origin=null
    FUN GENERATED_DATA_CLASS_MEMBER name:toString visibility:public modality:OPEN <> ($this:foo.bar.Sample) returnType:kotlin.String
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
      $this: VALUE_PARAMETER GENERATED_DATA_CLASS_MEMBER name:<this> type:foo.bar.Sample
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public open fun toString (): kotlin.String declared in foo.bar.Sample'
          STRING_CONCATENATION type=kotlin.String
            CONST String type=kotlin.String value="Sample("
            CONST String type=kotlin.String value="foo="
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:foo type:kotlin.Int visibility:private [final]' type=kotlin.Int origin=null
              receiver: GET_VAR '<this>: foo.bar.Sample declared in foo.bar.Sample.toString' type=foo.bar.Sample origin=null
            CONST String type=kotlin.String value=")"
  FUN name:box visibility:public modality:FINAL <> () returnType:kotlin.String
    BLOCK_BODY
      VAR name:sample type:foo.bar.Sample [val]
        CONSTRUCTOR_CALL 'public constructor <init> (foo: kotlin.Int) [primary] declared in foo.bar.Sample' type=foo.bar.Sample origin=null
          foo: CONST Int type=kotlin.Int value=42
      RETURN type=kotlin.Nothing from='public final fun box (): kotlin.String declared in foo.bar'
        WHEN type=kotlin.String origin=IF
          BRANCH
            if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
              arg0: CALL 'public final fun <get-foo> (): kotlin.Int declared in foo.bar.Sample' type=kotlin.Int origin=GET_PROPERTY
                $this: GET_VAR 'val sample: foo.bar.Sample [val] declared in foo.bar.box' type=foo.bar.Sample origin=null
              arg1: CONST Int type=kotlin.Int value=42
            then: CONST String type=kotlin.String value="OK"
          BRANCH
            if: CONST Boolean type=kotlin.Boolean value=true
            then: CONST String type=kotlin.String value="Fail"
FILE fqName:foo.bar.some.additional.files fileName:/SomeFile.kt
